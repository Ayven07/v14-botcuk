const moment = require("moment");
require("moment-duration-format");
const settings = require("../../configs/settings.json");
const regstats = require("../../schemas/registerStats");
const Users = require("../../schemas/users")
const messageUser = require("../../schemas/messageUser");
const voiceUser = require("../../schemas/voiceUser");
const cameraUser = require("../../schemas/cameraUser");
const streamUser = require("../../schemas/streamUser")
const emojis = require('../../configs/emojiName.json')
const inviterSchema = require("../../schemas/inviter");
const Discord = require("discord.js");
module.exports = {
conf: {
aliases: ["rankbilgi", "puanbilgi"],
name: "rankbilgi",
help: "rankbilgi",
category: "yetkili"
},
exclosive: async (client, message, args, embed) => {
if(settings.coinSystem === false) return message.reply({embeds: [embed.setDescription(`Terfi Sistemi Aktif DeÄŸil!`)]}).sil(15)
if(!client.ranks.some((x) => message.member.roles.cache.has(x.role)) && !message.member.permissions.has(Discord.PermissionsBitField.Flags.Administrator)) return message.react(message.guild.emojiGÃ¶ster(emojis.no))
const member = message.mentions.members.first() || message.guild.members.cache.get(args[0]) || message.member;
const messageData = await messageUser.findOne({ guildID: settings.guildID, userID: member.id });
const voiceData = await voiceUser.findOne({ guildID: settings.guildID, userID: member.id });
const streamData = await streamUser.findOne({ guildID: settings.guildID, userID: member.id });  
const cameraData = await cameraUser.findOne({ guildID: settings.guildID, userID: member.id });  
const inviterData = await inviterSchema.findOne({ guildID: settings.guildIDd, userID: member.id });
const registerData = await regstats.findOne({ guildID: settings.guildID, userID: member.id });

const mesaj = settings.messageCoin * (messageData ? messageData.topStat : 0) / settings.messageCount
const ses = settings.voiceCoin * (await voiceMS(voiceData ? voiceData.topStat : 0)) / settings.voiceCount 
const yayin = settings.streamCoin * (await voiceMS(streamData ? streamData.topStat : 0)) / settings.streamCount 
const kamera = settings.cameraCoin * (await voiceMS(cameraData ? cameraData.topStat : 0)) / settings.cameraCount 
const kayit = settings.registerCoin * (registerData ? registerData.top : 0) / 1
const davet = settings.inviteCoin * (inviterData ? inviterData.total : 0) / 1
const tagli = settings.taggedCoin * (await TaggedsDB(member.id)) / 1
const yetkili = settings.yetkiCoin * (await StaffsDB(member.id)) / 1

var puanbilgilendirme = new Discord.EmbedBuilder()
.setDescription(`${message.guild.emojiGÃ¶ster(emojis.hos)} SayÄ±n yetkililerimiz sizlere Ã¶zel olarak tasarlanmÄ±s olan **puan sistemi** hakkÄ±nda bu panelden bilgi alabilirsiniz Mesaj, Ses , Kamera , YayÄ±n gibi aktivitelerinizin size kaÃ§ puan ve coin ekleyeceÄŸini buradan gÃ¶rebilirsiniz.

\`\`\`fix
ğŸª™                Puan Sistemi            
\`\`\`
${message.guild.emojiGÃ¶ster(emojis.nokta)} \`  Mesaj PuanÄ±:  \` **${mesaj.toFixed()} Puan** (**${messageData ? messageData.topStat : 0} Mesaj.**)
${message.guild.emojiGÃ¶ster(emojis.nokta)} \`  Ses PuanÄ±:  \` **${ses.toFixed()} Puan** (**${moment.duration(voiceData ? voiceData.topStat : 0).format("D [GÃ¼n], H [Saat], m [Dakika]")}**)
${message.guild.emojiGÃ¶ster(emojis.nokta)} \`  YayÄ±n PuanÄ±:  \` **${yayin.toFixed()} Puan** (**${moment.duration(streamData ? streamData.topStat : 0).format("D [GÃ¼n], H [Saat], m [Dakika]")}**)
${message.guild.emojiGÃ¶ster(emojis.nokta)} \`  Kamera PuanÄ±:  \` **${kamera.toFixed()} Puan** (**${moment.duration(cameraData ? cameraData.topStat : 0).format("D [GÃ¼n], H [Saat], m [Dakika]")}**)
${message.guild.emojiGÃ¶ster(emojis.nokta)} \`  KayÄ±t PuanÄ±:  \` **${kayit.toFixed()} Puan** (**${registerData ? registerData.top : 0} KayÄ±t.**)
${message.guild.emojiGÃ¶ster(emojis.nokta)} \`  Davet PuanÄ±:  \` **${davet.toFixed()} Puan** (**${inviterData ? inviterData.total : 0} Davet.**)
${message.guild.emojiGÃ¶ster(emojis.nokta)} \`  TaglÄ± PuanÄ±:  \` **${tagli.toFixed()} Puan** (**${(await TaggedsDB(member.id))} TaglÄ±.**)
${message.guild.emojiGÃ¶ster(emojis.nokta)} \`  Yetkili PuanÄ±:  \` **${yetkili.toFixed()} Puan** (**${(await StaffsDB(member.id))} Yetkili.**)

\`\`\`fix
âš™              Puan AyarlarÄ±        
\`\`\`
${message.guild.emojiGÃ¶ster(emojis.nokta)} \`  Mesaj Puan AyarÄ±: \` Mesaj sayÄ±nÄ±z **${settings.messageCoin}** ile Ã§arpÄ±lÄ±p **${settings.messageCount}**'e bÃ¶lÃ¼nÃ¼r bunun sonucunda **mesaj** puanÄ±nÄ±z **${mesaj.toFixed()}**.
${message.guild.emojiGÃ¶ster(emojis.nokta)} \`  Ses Puan AyarÄ±: \` Ses sÃ¼reniz **${settings.voiceCoin}** ile Ã§arpÄ±lÄ±p **${settings.voiceCount}**' e bÃ¶lÃ¼nÃ¼r bunun sonucunda **ses** puanÄ±nÄ±z **${ses.toFixed()}**.
${message.guild.emojiGÃ¶ster(emojis.nokta)} \`  YayÄ±n Puan AyarÄ±: \` YayÄ±n sÃ¼reniz **${settings.streamCoin}** ile Ã§arpÄ±lÄ±p **${settings.streamCount}**' e bÃ¶lÃ¼nÃ¼r bunun sonucunda **yayÄ±n** puanÄ±nÄ±z **${yayin.toFixed()}**.
${message.guild.emojiGÃ¶ster(emojis.nokta)} \`  Kamera Puan AyarÄ±: \` Kamera aÃ§ma sÃ¼reniz **${settings.cameraCoin}** ile Ã§arpÄ±lÄ±p **${settings.cameraCount}**' e bÃ¶lÃ¼nÃ¼r bunun sonucunda **kamera** puanÄ±nÄ±z **${kamera.toFixed()}**.
${message.guild.emojiGÃ¶ster(emojis.nokta)} \`  KayÄ±t Puan AyarÄ±: \` KayÄ±t sayÄ±nÄ±z **${settings.registerCoin}** ile Ã§arpÄ±lÄ±p **1** e bÃ¶lÃ¼nÃ¼r bunun sonucunda **kayÄ±t** puanÄ±nÄ±z **${kayit.toFixed()}**.
${message.guild.emojiGÃ¶ster(emojis.nokta)} \`  Davet Puan AyarÄ±: \` Davet ettiÄŸiniz kiÅŸi sayÄ±sÄ±nÄ±z **${settings.inviteCoin}** ile Ã§arpÄ±lÄ±p **1**' e bÃ¶lÃ¼nÃ¼r bunun sonucunda **davet** puanÄ±nÄ±z **${davet.toFixed()}**.
${message.guild.emojiGÃ¶ster(emojis.nokta)} \`  TaglÄ± Puan AyarÄ±: \` TaglÄ± kiÅŸi sayÄ±nÄ±z **${settings.taggedCoin}** ile Ã§arpÄ±lÄ±p **1**' e bÃ¶lÃ¼nÃ¼r bunun sonucunda **taglÄ±** puanÄ±nÄ±z **${tagli.toFixed()}**.
${message.guild.emojiGÃ¶ster(emojis.nokta)} \`  Yetkili Puan AyarÄ±: \` Yetkili Ã§ektiÄŸiniz kiÅŸi sayÄ±sÄ± **${settings.yetkiCoin}** ile Ã§arpÄ±lÄ±p **1** e bÃ¶lÃ¼nÃ¼r bunun sonucunda **yetkili** puanÄ±nÄ±z **${yetkili.toFixed()}**.`)
.setImage(member.user.bannerURL({ dynamic: true, size: 2048 }))
.setFooter({ text: `Ã‡arpÄ±lan ve bÃ¶lÃ¼nen puan sayÄ±larÄ±nÄ±z sunucu sahibi tarafÄ±ndan ayarlanmÄ±ÅŸtÄ±r.`, iconURL: message.guild.iconURL({ dynamic: true, size: 1024 }) })
.setThumbnail(member.user.avatarURL({ dynamic: true, size: 2048 }))
.setTimestamp();
message.reply({ embeds: [puanbilgilendirme] })
}
}

async function voiceMS(type) {
const dakika = type / (1000 * 60); 
return dakika;
}
async function TaggedsDB(user) {
return new Promise((resolve, reject) => {
Users.findOne({ _id: user }, async (err, res) => {
if (err) {
reject(err);
} else {
if (!res) {
resolve(0);
} else {
let count = 0;
if (res.Taggeds && res.Taggeds.length > 0) {
count = res.Taggeds.length;
} else {
count = 0; 
}
resolve(count);
}
}
});
});
}

async function StaffsDB(user) {
return new Promise((resolve, reject) => {
Users.findOne({ _id: user }, async (err, res) => {
if (err) {
reject(err);
} else {
if (!res) {
resolve(0);
} else {
let count = 0;
if (res.Staffs && res.Staffs.length > 0) {
count = res.Staffs.length;
} else {
count = 0; 
}
resolve(count);
}
}
});
});
}